name: linux

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cvmfs_base: ['sw-nightlies.hsf.org']
        ENVIRONMENT: ['key4hep']
    steps:
    - uses: actions/checkout@v3
    - uses: cvmfs-contrib/github-action-cvmfs@v3

    - name: Start container
      run: |
        docker run -it --name CI_container -v ${GITHUB_WORKSPACE}:/Package/main -v /cvmfs:/cvmfs:shared -d  centos:7 /bin/bash
    - name: CMake Configure
      run: |
         docker exec CI_container /bin/bash -c 'cd ./Package/main;\
         echo "BODY: " ;\
         echo ${{ github.event.pull_request.body }};\
         mkdir -p build install;\
         source /cvmfs/${{ matrix.cvmfs_base }}/${{ matrix.ENVIRONMENT }}/setup.sh;\
         cd build;\
         cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_FLAGS=" -fdiagnostics-color=always " -G Ninja ..;\
         '
         # ninja -k0 install'
    - name: Fetch dependents
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package;\
        # Lower caps name
        name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]');\
        pip3 install --user requests
        ./main/.github/scripts/fetch.sh $1;\
        ls -lah;\

        name=podio
        yum install -y glibc-devel git
        cd Package
        source /cvmfs/sw-nightlies.hsf.org/key4hep/setup.sh;\
        git clone https://github.com/spack/spack --depth 1;\
        source spack/share/spack/setup-env.sh;\
        git clone https://github.com/key4hep/key4hep-spack --depth 1;\
        cd key4hep-spack;\
        spack repo add .;\
        cd ..;\
        python3 /Package/main/.github/workflows/externals.py
        branch_packages=$(python3 /Package/main/.github/workflows/parse.py ${{ github.event.pull_request.body }})
        branch_packages=""
        spack env create dev
        spack env activate dev
        python3 /Package/main/.github/workflows/config.py
        python3 /Package/main/.github/workflows/fetch_and_checkout.py $name $branch_packages
        cd main
        spack develop --no-clone --path $PWD $name@master
        spack add $name@master
        spack concretize -f

        '
    # - name: Test
    #   run: |
    #     docker exec CI_container /bin/bash -c 'cd ./Package;\
    #     source /cvmfs/${{ matrix.cvmfs_base }}/${{ matrix.ENVIRONMENT }}/setup.sh;\
    #     cd build;\
    #     ninja -k0 && ctest --output-on-failure;'
    # - name: Install
    #   run: |
    #     docker exec CI_container /bin/bash -c 'cd ./Package;\
    #     source /cvmfs/${{ matrix.cvmfs_base }}/${{ matrix.ENVIRONMENT }}/setup.sh;\
    #     cd build;\
    #     ninja -k0 install;'
