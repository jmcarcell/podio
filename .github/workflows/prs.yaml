name: linux

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cvmfs_base: ['sw-nightlies.hsf.org']
        ENVIRONMENT: ['key4hep']
    steps:
    - uses: actions/checkout@v3
    - uses: cvmfs-contrib/github-action-cvmfs@v3
    - uses: docker://ghcr.io/aidasoft/centos7:latest 
      options: -v /cvmfs:/cvmfs -v ${GITHUB_WORKSPACE}:/Package/main
    - name: CMake Configure
      run: |
         cd Package/main
         mkdir -p build install
         source /cvmfs/${{ matrix.cvmfs_base }}/${{ matrix.ENVIRONMENT }}/setup.sh
         cd build
         cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_FLAGS=" -fdiagnostics-color=always " -G Ninja ..
         # ninja -k0 install'
    - name: Fetch dependents
      run: |
        cd ..
        git clone https://github.com/spack/spack --depth 1
        source spack/share/spack/setup-env.sh
        # Lower caps name
        name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        deps=$(spack dependents $name)
        for d in deps
        do
          echo $d
        done
        ls -lah
    # - name: Test
    #   run: |
    #     docker exec CI_container /bin/bash -c 'cd ./Package;\
    #     source /cvmfs/${{ matrix.cvmfs_base }}/${{ matrix.ENVIRONMENT }}/setup.sh;\
    #     cd build;\
    #     ninja -k0 && ctest --output-on-failure;'
    # - name: Install
    #   run: |
    #     docker exec CI_container /bin/bash -c 'cd ./Package;\
    #     source /cvmfs/${{ matrix.cvmfs_base }}/${{ matrix.ENVIRONMENT }}/setup.sh;\
    #     cd build;\
    #     ninja -k0 install;'
